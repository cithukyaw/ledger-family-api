generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int       @id @default(autoincrement())
  name      String?   @db.VarChar(100)
  password  String    @db.VarChar(255)
  email     String    @unique(map: "User_email_key") @db.VarChar(100)
  role      String    @db.VarChar(10)
  active    Boolean   @default(true)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  tokens    AuthToken[]
  expenses  Expense[]
  @@map("users")
}

model AuthToken {
  id            Int       @id @default(autoincrement())
  userId        Int       @map("user_id")
  accessToken   String    @db.VarChar(255) @map("access_token")
  refreshToken  String    @db.VarChar(255) @map("refresh_token")
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime? @map("updated_at")
  deletedAt     DateTime? @map("deleted_at")

  user          User @relation(fields: [userId], references: [id])
  @@map("auth_tokens")
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique @db.VarChar(150)
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @map("updated_at")
  deletedAt DateTime? @map("deleted_at")

  expense   Expense[]
  @@map("categories")
}

model Expense {
  id          Int       @id @default(autoincrement())
  userId      Int       @map("user_id")
  categoryId  Int?      @map("category_id")
  date        DateTime  @db.Date
  title       String    @db.VarChar(255)
  amount      Int       @db.UnsignedInt
  remarks     String?   @db.VarChar(255)
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime? @map("updated_at")
  deletedAt   DateTime? @map("deleted_at")

  user        User @relation(fields: [userId], references: [id])
  category    Category? @relation(fields: [categoryId], references: [id])
  @@map("expenses")
}
