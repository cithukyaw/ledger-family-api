generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  name      String?     @db.VarChar(100)
  password  String      @db.VarChar(255)
  email     String      @db.VarChar(100) @unique(map: "User_email_key")
  role      String      @db.VarChar(10)
  active    Boolean     @default(true)
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime?   @updatedAt @map("updated_at")
  deletedAt DateTime?   @map("deleted_at")
  tokens    AuthToken[]
  expenses  Expense[]
  ledgers   Ledger[]

  @@map("users")
}

model AuthToken {
  id           Int       @id @default(autoincrement())
  userId       Int       @map("user_id")
  accessToken  String    @db.VarChar(255) @map("access_token")
  refreshToken String    @db.VarChar(255) @map("refresh_token")
  createdAt    DateTime  @default(now()) @map("created_at")
  updatedAt    DateTime? @updatedAt @map("updated_at")
  deletedAt    DateTime? @map("deleted_at")
  user         User      @relation(fields: [userId], references: [id])

  @@map("auth_tokens")
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @db.VarChar(150) @unique
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime? @updatedAt @map("updated_at")
  deletedAt DateTime? @map("deleted_at")
  expense   Expense[]

  @@map("categories")
}

model Expense {
  id         Int       @id @default(autoincrement())
  userId     Int       @map("user_id")
  categoryId Int?      @map("category_id")
  type       String?   @db.VarChar(10)
  date       String    @db.VarChar(10)
  title      String    @db.VarChar(255)
  amount     Int
  remarks    String?   @db.VarChar(255)
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime? @updatedAt @map("updated_at")
  deletedAt  DateTime? @map("deleted_at")
  category   Category? @relation(fields: [categoryId], references: [id])
  user       User      @relation(fields: [userId], references: [id])

  @@map("expenses")
}

model Ledger {
  id            Int       @id @default(autoincrement())
  userId        Int       @map("user_id")
  date          String    @db.VarChar(10)
  current       Int       @default(0)
  income        Int       @default(0)
  parentSupport Int       @default(0) @map("parent_support")
  budget        Int       @default(0)
  grossSaving   Int       @default(0) @map("gross_saving")
  expenseCash   Int       @default(0) @map("expense_cash")
  expenseBank   Int       @default(0) @map("expense_bank")
  cost          Int       @default(0)
  netSaving     Int       @default(0) @map("net_saving")
  balance       Int       @default(0)
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime? @updatedAt @map("updated_at")
  deletedAt     DateTime? @map("deleted_at")
  user          User      @relation(fields: [userId], references: [id])

  @@map("ledgers")
}
